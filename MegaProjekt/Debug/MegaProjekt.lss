
MegaProjekt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000032e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  00000382  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000382  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003b4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  000003f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00004580  00000000  00000000  000004ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000365c  00000000  00000000  00004a2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000913  00000000  00000000  00008088  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000114  00000000  00000000  0000899c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00002c26  00000000  00000000  00008ab0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000136  00000000  00000000  0000b6d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  0000b80c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <__ctors_end>
   4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
   8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
   c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  10:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  14:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  18:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  1c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  20:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  24:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  28:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  2c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  30:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  34:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  38:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  3c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  40:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  44:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  48:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  4c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  50:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  54:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  58:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  5c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  60:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  64:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  68:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  6c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  70:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  74:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  78:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  7c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  80:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  84:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  88:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  8c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  90:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  94:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  98:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  9c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  a0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  a4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  a8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  ac:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  b0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  b4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  b8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  bc:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  c0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  c4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  c8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  cc:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  d0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  d4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  d8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  dc:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  e0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  e4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  e8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  ec:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  f0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  f4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  f8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
  fc:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 100:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 104:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 108:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 10c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 110:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 114:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 118:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 11c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 120:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 124:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 128:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 12c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 130:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 134:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 138:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 13c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 140:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 144:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 148:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 14c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 150:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 154:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 158:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 15c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 160:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 164:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 168:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 16c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 170:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 174:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 178:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 17c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 180:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 184:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 188:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 18c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 190:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 194:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 198:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 19c:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1a0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1a4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1a8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1ac:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1b0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1b4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1b8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1bc:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1c0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1c4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1c8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1cc:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1d0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1d4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1d8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1dc:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1e0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1e4:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1e8:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1ec:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>
 1f0:	0c 94 0a 01 	jmp	0x214	; 0x214 <__bad_interrupt>

000001f4 <__ctors_end>:
 1f4:	11 24       	eor	r1, r1
 1f6:	1f be       	out	0x3f, r1	; 63
 1f8:	cf ef       	ldi	r28, 0xFF	; 255
 1fa:	cd bf       	out	0x3d, r28	; 61
 1fc:	df e3       	ldi	r29, 0x3F	; 63
 1fe:	de bf       	out	0x3e, r29	; 62
 200:	00 e0       	ldi	r16, 0x00	; 0
 202:	0c bf       	out	0x3c, r16	; 60
 204:	18 be       	out	0x38, r1	; 56
 206:	19 be       	out	0x39, r1	; 57
 208:	1a be       	out	0x3a, r1	; 58
 20a:	1b be       	out	0x3b, r1	; 59
 20c:	0e 94 16 01 	call	0x22c	; 0x22c <main>
 210:	0c 94 95 01 	jmp	0x32a	; 0x32a <_exit>

00000214 <__bad_interrupt>:
 214:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000218 <c1201_init>:
#include "hc595.h"
#include "board.h"
#include "spi.h"

void c1201_init() {
	spi_init();
 218:	0e 94 58 01 	call	0x2b0	; 0x2b0 <spi_init>
	spi_select_slave();
 21c:	0e 94 67 01 	call	0x2ce	; 0x2ce <spi_select_slave>
	HC595_PORT.IN = (HC595_MR_bm);
 220:	e0 ea       	ldi	r30, 0xA0	; 160
 222:	f6 e0       	ldi	r31, 0x06	; 6
 224:	88 e0       	ldi	r24, 0x08	; 8
 226:	80 87       	std	Z+8, r24	; 0x08
	HC595_PORT.DIR = (HC595_MR_bm);
 228:	80 83       	st	Z, r24
 22a:	08 95       	ret

0000022c <main>:
#include "spi.h"


int main(void)
{
	BUTTON_LOW_PORT.PIN0CTRL = PORT_OPC_PULLUP_gc;
 22c:	e0 e6       	ldi	r30, 0x60	; 96
 22e:	f6 e0       	ldi	r31, 0x06	; 6
 230:	88 e1       	ldi	r24, 0x18	; 24
 232:	80 8b       	std	Z+16, r24	; 0x10
	BUTTON_LOW_PORT.PIN1CTRL = PORT_OPC_PULLUP_gc;
 234:	81 8b       	std	Z+17, r24	; 0x11
	BUTTON_LOW_PORT.PIN2CTRL = PORT_OPC_PULLUP_gc;
 236:	82 8b       	std	Z+18, r24	; 0x12
	BUTTON_LOW_PORT.PIN3CTRL = PORT_OPC_PULLUP_gc;
 238:	83 8b       	std	Z+19, r24	; 0x13
	
	c1201_init();
 23a:	0e 94 0c 01 	call	0x218	; 0x218 <c1201_init>
    while (1)
    {
		if (!(BUTTON_LOW_PORT.IN & BUTTON0_PIN_bm)) {
 23e:	c0 e6       	ldi	r28, 0x60	; 96
 240:	d6 e0       	ldi	r29, 0x06	; 6
 242:	88 85       	ldd	r24, Y+8	; 0x08
 244:	80 fd       	sbrc	r24, 0
 246:	03 c0       	rjmp	.+6      	; 0x24e <main+0x22>
			pwm_duty(100);
 248:	84 e6       	ldi	r24, 0x64	; 100
 24a:	0e 94 3a 01 	call	0x274	; 0x274 <pwm_duty>
		}
		if (!(BUTTON_LOW_PORT.IN & BUTTON1_PIN_bm)) {
 24e:	88 85       	ldd	r24, Y+8	; 0x08
 250:	81 fd       	sbrc	r24, 1
 252:	03 c0       	rjmp	.+6      	; 0x25a <main+0x2e>
			pwm_duty(75);
 254:	8b e4       	ldi	r24, 0x4B	; 75
 256:	0e 94 3a 01 	call	0x274	; 0x274 <pwm_duty>
		}
		if (!(BUTTON_LOW_PORT.IN & BUTTON2_PIN_bm)) {
 25a:	88 85       	ldd	r24, Y+8	; 0x08
 25c:	82 fd       	sbrc	r24, 2
 25e:	03 c0       	rjmp	.+6      	; 0x266 <main+0x3a>
			pwm_duty(50);
 260:	82 e3       	ldi	r24, 0x32	; 50
 262:	0e 94 3a 01 	call	0x274	; 0x274 <pwm_duty>
		}
		if (!(BUTTON_LOW_PORT.IN & BUTTON3_PIN_bm)) {
 266:	88 85       	ldd	r24, Y+8	; 0x08
 268:	83 fd       	sbrc	r24, 3
 26a:	eb cf       	rjmp	.-42     	; 0x242 <main+0x16>
			pwm_duty(25);
 26c:	89 e1       	ldi	r24, 0x19	; 25
 26e:	0e 94 3a 01 	call	0x274	; 0x274 <pwm_duty>
 272:	e7 cf       	rjmp	.-50     	; 0x242 <main+0x16>

00000274 <pwm_duty>:

void pwm_stop(void) {
	TCF0.CTRLA = TC_CLKSEL_OFF_gc;
}

void pwm_duty(uint8_t duty) { //z.B. 25 oder 100
 274:	cf 93       	push	r28
 276:	df 93       	push	r29
	uint8_t actualduty = 100 / duty;
	TCF0.PER = TCF0.PER / actualduty;
 278:	e0 e0       	ldi	r30, 0x00	; 0
 27a:	fb e0       	ldi	r31, 0x0B	; 11
 27c:	c6 a1       	ldd	r28, Z+38	; 0x26
 27e:	d7 a1       	ldd	r29, Z+39	; 0x27
 280:	68 2f       	mov	r22, r24
 282:	70 e0       	ldi	r23, 0x00	; 0
 284:	84 e6       	ldi	r24, 0x64	; 100
 286:	90 e0       	ldi	r25, 0x00	; 0
 288:	0e 94 81 01 	call	0x302	; 0x302 <__divmodhi4>
 28c:	9b 01       	movw	r18, r22
 28e:	33 27       	eor	r19, r19
 290:	ce 01       	movw	r24, r28
 292:	b9 01       	movw	r22, r18
 294:	0e 94 6d 01 	call	0x2da	; 0x2da <__udivmodhi4>
 298:	66 a3       	std	Z+38, r22	; 0x26
 29a:	77 a3       	std	Z+39, r23	; 0x27
	TCF0.CCC = TCF0.PER / actualduty; // z.B. 4 oder 1
 29c:	86 a1       	ldd	r24, Z+38	; 0x26
 29e:	97 a1       	ldd	r25, Z+39	; 0x27
 2a0:	b9 01       	movw	r22, r18
 2a2:	0e 94 6d 01 	call	0x2da	; 0x2da <__udivmodhi4>
 2a6:	64 a7       	std	Z+44, r22	; 0x2c
 2a8:	75 a7       	std	Z+45, r23	; 0x2d
}
 2aa:	df 91       	pop	r29
 2ac:	cf 91       	pop	r28
 2ae:	08 95       	ret

000002b0 <spi_init>:
// We use a prescaler of 64. Therefore the transmission speed is 31.25 kbps. The
// slave select line is active low. At the beginning the slave is deselected.
void spi_init(void)
{
	// Deactivate the slave.
	SPI_PORT.OUT |= SPI_SS_bm;
 2b0:	e0 e4       	ldi	r30, 0x40	; 64
 2b2:	f6 e0       	ldi	r31, 0x06	; 6
 2b4:	84 81       	ldd	r24, Z+4	; 0x04
 2b6:	80 61       	ori	r24, 0x10	; 16
 2b8:	84 83       	std	Z+4, r24	; 0x04
	// Make MISO an input line.
	SPI_PORT.DIR &= ~SPI_MISO_bm;
 2ba:	80 81       	ld	r24, Z
 2bc:	8f 7b       	andi	r24, 0xBF	; 191
 2be:	80 83       	st	Z, r24
	// Make SS, MOSI and SCK output lines.
	SPI_PORT.DIR |= SPI_SS_bm | SPI_MOSI_bm | SPI_SCK_bm;
 2c0:	80 81       	ld	r24, Z
 2c2:	80 6b       	ori	r24, 0xB0	; 176
 2c4:	80 83       	st	Z, r24
	// Enable SPI, select master mode and set the prescaler factor to 64.
	SPI_MODULE.CTRL = SPI_ENABLE_bm | SPI_MASTER_bm | SPI_PRESCALER_DIV64_gc;
 2c6:	82 e5       	ldi	r24, 0x52	; 82
 2c8:	80 93 c0 08 	sts	0x08C0, r24	; 0x8008c0 <__TEXT_REGION_LENGTH__+0x7008c0>
 2cc:	08 95       	ret

000002ce <spi_select_slave>:
}

void spi_select_slave(void) {
	SPI_PORT.OUT &= ~SPI_SS_bm;
 2ce:	e0 e4       	ldi	r30, 0x40	; 64
 2d0:	f6 e0       	ldi	r31, 0x06	; 6
 2d2:	84 81       	ldd	r24, Z+4	; 0x04
 2d4:	8f 7e       	andi	r24, 0xEF	; 239
 2d6:	84 83       	std	Z+4, r24	; 0x04
 2d8:	08 95       	ret

000002da <__udivmodhi4>:
 2da:	aa 1b       	sub	r26, r26
 2dc:	bb 1b       	sub	r27, r27
 2de:	51 e1       	ldi	r21, 0x11	; 17
 2e0:	07 c0       	rjmp	.+14     	; 0x2f0 <__udivmodhi4_ep>

000002e2 <__udivmodhi4_loop>:
 2e2:	aa 1f       	adc	r26, r26
 2e4:	bb 1f       	adc	r27, r27
 2e6:	a6 17       	cp	r26, r22
 2e8:	b7 07       	cpc	r27, r23
 2ea:	10 f0       	brcs	.+4      	; 0x2f0 <__udivmodhi4_ep>
 2ec:	a6 1b       	sub	r26, r22
 2ee:	b7 0b       	sbc	r27, r23

000002f0 <__udivmodhi4_ep>:
 2f0:	88 1f       	adc	r24, r24
 2f2:	99 1f       	adc	r25, r25
 2f4:	5a 95       	dec	r21
 2f6:	a9 f7       	brne	.-22     	; 0x2e2 <__udivmodhi4_loop>
 2f8:	80 95       	com	r24
 2fa:	90 95       	com	r25
 2fc:	bc 01       	movw	r22, r24
 2fe:	cd 01       	movw	r24, r26
 300:	08 95       	ret

00000302 <__divmodhi4>:
 302:	97 fb       	bst	r25, 7
 304:	07 2e       	mov	r0, r23
 306:	16 f4       	brtc	.+4      	; 0x30c <__divmodhi4+0xa>
 308:	00 94       	com	r0
 30a:	07 d0       	rcall	.+14     	; 0x31a <__divmodhi4_neg1>
 30c:	77 fd       	sbrc	r23, 7
 30e:	09 d0       	rcall	.+18     	; 0x322 <__divmodhi4_neg2>
 310:	0e 94 6d 01 	call	0x2da	; 0x2da <__udivmodhi4>
 314:	07 fc       	sbrc	r0, 7
 316:	05 d0       	rcall	.+10     	; 0x322 <__divmodhi4_neg2>
 318:	3e f4       	brtc	.+14     	; 0x328 <__divmodhi4_exit>

0000031a <__divmodhi4_neg1>:
 31a:	90 95       	com	r25
 31c:	81 95       	neg	r24
 31e:	9f 4f       	sbci	r25, 0xFF	; 255
 320:	08 95       	ret

00000322 <__divmodhi4_neg2>:
 322:	70 95       	com	r23
 324:	61 95       	neg	r22
 326:	7f 4f       	sbci	r23, 0xFF	; 255

00000328 <__divmodhi4_exit>:
 328:	08 95       	ret

0000032a <_exit>:
 32a:	f8 94       	cli

0000032c <__stop_program>:
 32c:	ff cf       	rjmp	.-2      	; 0x32c <__stop_program>
